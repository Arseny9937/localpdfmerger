[{"/Users/julianbeck/Documents/Programming/go/src/github.com/jufabeck2202/converter/go-wasm-pdfmerge/pdf-merger/src/reportWebVitals.js":"1","/Users/julianbeck/Documents/Programming/go/src/github.com/jufabeck2202/converter/go-wasm-pdfmerge/pdf-merger/src/App.js":"2","/Users/julianbeck/Documents/Programming/go/src/github.com/jufabeck2202/converter/go-wasm-pdfmerge/pdf-merger/src/worker.js":"3","/Users/julianbeck/Documents/Programming/go/src/github.com/jufabeck2202/converter/go-wasm-pdfmerge/pdf-merger/src/index.js":"4"},{"size":362,"mtime":1611339131005,"results":"5","hashOfConfig":"6"},{"size":1893,"mtime":1611351123404,"results":"7","hashOfConfig":"6"},{"size":2593,"mtime":1611351461353,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1611339131004,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19jtwtk",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/julianbeck/Documents/Programming/go/src/github.com/jufabeck2202/converter/go-wasm-pdfmerge/pdf-merger/src/reportWebVitals.js",[],"/Users/julianbeck/Documents/Programming/go/src/github.com/jufabeck2202/converter/go-wasm-pdfmerge/pdf-merger/src/App.js",["19","20"],"import './App.css'\nimport { useEffect } from 'react'\nimport {GoWorker} from \"./worker\"\nimport download from \"downloadjs\"\nimport {useDropzone} from 'react-dropzone';\n\n\nfunction App () {\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone();\n  const files = acceptedFiles.map(file => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  useEffect(() => {\n    \n    if (!WebAssembly.instantiateStreaming) {\n      // polyfill\n      WebAssembly.instantiateStreaming = async (resp, importObject) => {\n        const source = await (await resp).arrayBuffer()\n        return await WebAssembly.instantiate(source, importObject)\n      }\n    }\n  }, [])\n  \n  useEffect(async () => {\n    console.log(acceptedFiles)\n    await processPDFs(acceptedFiles[0])\n  }, [acceptedFiles])\n\n\n  async function processPDFs (file) {\n    let worker = await new GoWorker();\n    let st = Date.now()\n    let reader = new FileReader()\n    async function callback (e) {\n\n      let buffer = e.target.result.slice()\n\n      st = Date.now()\n      let result = await worker.validate(buffer)\n      if (!result) {\n        return\n      }\n\n      st = Date.now()\n      // FIXME: extra copying of buffer\n      buffer = e.target.result.slice()\n      try {\n        result = await worker.extractPage(buffer, 1)\n\n        download(new Blob([result]), 'first_page.pdf')\n      } catch (e) {\n        console.log('caught in index.html!', e)\n      }\n    }\n    reader.onload = callback\n    reader.readAsArrayBuffer(file)\n  }\n\n  return (\n    <div className='App'>\n    <section className=\"container\">\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n      <aside>\n        <h4>Files</h4>\n        <ul>{files}</ul>\n      </aside>\n    </section>\n    </div>\n  )\n}\n\nexport default App\n","/Users/julianbeck/Documents/Programming/go/src/github.com/jufabeck2202/converter/go-wasm-pdfmerge/pdf-merger/src/worker.js",["21","22"],"/Users/julianbeck/Documents/Programming/go/src/github.com/jufabeck2202/converter/go-wasm-pdfmerge/pdf-merger/src/index.js",[],{"ruleId":"23","severity":1,"message":"24","line":27,"column":13,"nodeType":"25","endLine":30,"endColumn":4},{"ruleId":"26","severity":1,"message":"27","line":47,"column":7,"nodeType":"28","messageId":"29","endLine":47,"endColumn":9},{"ruleId":"26","severity":1,"message":"30","line":4,"column":7,"nodeType":"28","messageId":"29","endLine":4,"endColumn":15},{"ruleId":"31","severity":2,"message":"32","line":50,"column":23,"nodeType":"28","messageId":"33","endLine":50,"endColumn":25},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'st' is assigned a value but never used.","Identifier","unusedVar","'GoWorker' is defined but never used.","no-undef","'Go' is not defined.","undef"]